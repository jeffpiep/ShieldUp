'-----------------------------------------------------------
'
'					SHIELDS UP!
'
'Mashup of Castle Crisis and Missle Command
'For Atari 800XL 8-Bit BASIC 10-Liner
'One-player game with PADDLE
'
'Jeff Piepmeier
'March 11, 2017
'http://jeffpiepmeier.blogspot.com/
'http://github.com/jeffpiep/
'
'Parsed with TurboBASIC XL Parser Tool: 
'http://github.com/dmsc/tbxl-parser
$options +optimize, optimize=-convert_percent-const_replace
'PM design with Mad Studio:
'http://atariage.com/forums/topic/258728-Mad-Studio
'Tested on Altirra:
'http://www.virtualdub.org/altirra.html
'-----------------------------------------------------------

'SET UP DISPLAY
GRAPHICS 8: REM USE GR.8 TO CLEAR OUT 8KBYTES
GRAPHICS 7: REM GR.7 HAS 4 COLORS AND TAKES 4KBYTES
SETCOLOR 0,0,4: REM CHANGE COLOR 1 TO BE DARK GRAY
'FIDDLE WITH THE DL TO PUT BIG TEXT ON THE BOTTOM
'MOVE ADR("\47\60\BF\07\41"),DPEEK(560)+85,5

'SET UP SPRITES/PLAYER MISSLE GRAPHICS
POKE 54279,168 : REM PM=168($A8) ON 64K 800XL - 24 PAGES BELOW RAMTOP
PM=$A800:REM PM*$100+$200 TO POINT TO BLANK AREA FOR SPRITE STORAGE
DPOKE 704, $9E9E : REM COLOR OF PLAYER 1 & 0
DPOKE $D00C, 1 : REM STANDARD WIDTH
POKE 53277,3:REM ENABLE PM DISPLAY
POKE 559,46:REM ENABLE PM DMA WITH 2-LINE RES
POKE 623,8:REM SET PLAYER PRIORITY UNDER PLAYFIELD

'DEFINE SPRITES/PLAYERS AND PUT IN UNUSED PM AREA
'LEFT SHIELD
MOVE ADR("\08\18\38\70\E0\C0\80"), PM+128, 7
'RIGHT SHIELD
MOVE ADR("\80\C0\E0\70\38\18\08"), PM+256, 7

'DRAW PYRAMID
FOR I=0 TO 5
	FOR J=0 TO 2*I
		NUMBLOCKS=NUMBLOCKS+1
		ROW = 32 + I*8
		COL = 76 + (J-I)*8
		FOR K=0 TO 7
			FOR L=0 TO 7
				COLOR 1+(RND>.9)
				PLOT COL+L,ROW+K
			NEXT L
		NEXT K
		'TEXT COL,ROW,CHR$(128+RAND(32))
		POKE 657,2
		?NUMBLOCKS,
	NEXT J
NEXT I

COLOR 3
'GAME LOOP
REPEAT

'CLEAR COLLISION REGISTER
POKE 53278,0

'MOVE THE SHIELD
PP=INT(0.395*(228-PADDLE(0)))
PAUSE 0 : REM TRY TO SYNC UP SPRITE MOVE WITH VSYNC
MOVE PM+128+128*(PP>46)-87+PP*(PP<47)-(PP-95)*(PP>46)+38,PM+512+37,56
POKE $D000,78+PP
PAUSE 0 : REM TRY TO SYNC UP SPRITE MOVE WITH VSYNC
MOVE PM+128+128*(PP>43)-82+PP*(PP<44)-(PP-85)*(PP>43)+38,PM+640+37,56
POKE $D001,83+PP

'DETECT BOUNCE
IF PEEK($D008)>0
	M=0
	DPOKE PM+384+14+MY,0
ENDIF

'CLEAR COLLISION REGISTER
POKE 53278,0

'FIRE MISSLES
IF M
	DRAWTO MX,MY
	DPOKE PM+384+14+MY,$0000
	MX=MX+DMX
	POKE $D004,MX+46
	MY=MY+2
	M=MY<82
	DPOKE PM+384+14+MY,$0101*M
ELSE
	MX=20+RAND(120)
	I=RAND(6)
	J=RAND(2*I+1)
	ROW = 32 + I*8 + 4
	COL = 76 - (I-J)*8 + 4
	DMX = 2*(COL-MX)/(ROW)
	MY=0
	M=1
	PLOT MX,MY
ENDIF

PAUSE 1 : REM MAKE SURE ENTIRE SCREEN HAS BEEN WRITTEN AT LEAST ONCE
'DETECT HIT
IF PEEK($D000)&1=1
	I = INT((MY -32 )/8)
	J = INT((MX -76 )/8) + I
	ROW = 32 + I*8 + 4
	COL = 76 - (I-J)*8 + 4
	FOR CC=0 TO 1
		COLOR (1-CC)*3
		FOR RR=1 TO 6
			CIRCLE COL,ROW,RR
			SETCOLOR 4,RAND(16),8
		NEXT RR
	NEXT CC
	PLOT COL,ROW
	SETCOLOR 4,0,0
	COLOR 3 : REM CHANGE LINE COLOR BACK FROM BACKGROUND TO BLUE
	NUMBLOCKS=NUMBLOCKS-1
	'M=0
ENDIF

'UPDATE SCORE
POKE 657,2
?NUMBLOCKS,PEEK($D000)

UNTIL 0=1
Z=0: REM NEEDED TO ASSIGN VARIABLE FOR 0 TO REUSE FOR BASIC TOKENIZING OPTIMIZATION
'TURN OF ALL SOUNDS
SOUND Z,Z,Z,Z
SOUND 1,Z,Z,Z
SOUND 2,Z,Z,Z
?,"GAME OVER";
DO:LOOP
